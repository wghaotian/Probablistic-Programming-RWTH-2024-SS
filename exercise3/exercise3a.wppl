// exercise3a
var mcmc = true;
var n = 1000;

// Function to generate a d-dimensional point within the unit cube
var generatePoint = function(d) {
    return repeat(d, function() {
        return sample(Uniform({a: -1, b: 1}));
    });
};

// Function to check if a d-dimensional point lies inside the unit ball
var isInUnitBall = function(point) {
    var squaredNorm = sum(map(function(x) { return x * x; }, point));
    return squaredNorm <= 1;
};

var model = function() {
    var point = generatePoint(10); // Change the dimension here
    condition(isInUnitBall(point));
    return point;
};

var t1 = Date.now()
viz.auto(Infer({method: mcmc ? "MCMC" : "rejection", samples: n}, model));
var t2 = Date.now()
var time_diff = (t2 - t1) / 1000
if (mcmc == true) {
  console.log("time of mcmc: ", time_diff)
}
else {
  console.log("time of rejection: ", time_diff)
}